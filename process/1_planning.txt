#for best reading have width greater than eighty
The first thing that I did after reading the problem statement was create a
plan of how the program would flow, I took the most intuitive steps: parse,
ping, print. From there I decided the input and output of each step; parser
takes in user input and outputs the information that ping needs if it does not
exit on input error, ping takes in the parser's token and outputs information
of the each packet along with the total packet info at the end, print uses the
raw info and transforms it to human readable output sent to the command line.
Once I had the high level logic down I wrote the pseudo code for each major
function to make sure I can take clean logical steps to get to the desired
output. The main challenge here is keeping each step contained within their
tasks; in C since there are no explicit classes it becomes paramount that
functions stick to one focus where the parent functions create clear
hierarchies towards the purpose of the program.
